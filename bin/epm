#! /bin/php
<?php	// EPM Maintenance Program

// File:	epm
// Author:	Robert L Walton <walton@acm.org>
// Date:	Fri Jun 19 04:13:44 EDT 2020

$document = <<<'EOT'
epm [-n] init project [problem]
epm [-n] init -projects
epm [-n] init -admin
epm [-n] init -all
epm [-n] import [project [problem]]
epm [-n] export [project [problem]]

This program is intended to be run inside the $epm_data
directory tree.  It searches the current director and
its ancestors for a directory D containing the link
+web+.  It then sets $epm_web to the absolute name of
the directory pointed at, sets $php_self to 'epm', and
loads $epm_web/parameters.php.

This program then loads $epm_home/include/epm_maint.php
and executes the functions as indicated.

The -n option indicates a dry run.

EOT;

function ERROR ( $message )
{
    fprintf ( STDERR, '%s',
              "epm ERROR: $message" . PHP_EOL );
    exit ( 1 );
}

$dir = getcwd();
if ( $dir === false )
    ERROR ( "cannot get current working directory" );

while ( true )
{
    if ( is_dir ( "$dir/+web+" ) )
        break;
    $parent = pathinfo ( $dir, PATHINFO_DIRNAME );
    if ( $parent == $dir )
        ERROR ( "cannot find +web+" );
    $dir = $parent;
}

$epm_web = @readlink ( "$dir/+web+" );
if ( $epm_web === false )
    ERROR ( "cannot read link $dir/+web+" );
if ( $epm_web[0] != '/' )
    $epm_web = "$dir/$epm_web";

$epm_self = 'epm';
require "$epm_web/parameters.php";

echo ( "WEB $epm_web" . PHP_EOL );
exit;


$dryrun = false;
if ( $argc >= 2 && $argv[1] == '-n' )
{
    $dryrun = true;
    array_shift ( $argv );
    -- $argc;
}

if ( $argc < 3 || preg_match ( '/^-doc/', $argv[1] ) )
{
    echo $document;
    exit ( 0 );
}

$op = $argv[1];
if ( ! in_array ( $op, ['init','import','export'],
                       true ) )
    ERROR ( "cannot understand $op" );



exit ( 0 );

?>

